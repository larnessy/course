plugins {
    id 'java'
    id 'course.java-application-conventions'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group 'com.course'
version '1.0'

java {
    sourceCompatibility = '17'
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation 'org.springframework.boot:spring-boot-starter'
    runtimeOnly 'com.h2database:h2'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'

    implementation 'org.liquibase:liquibase-core:4.24.0'

    testImplementation 'org.testcontainers:junit-jupiter:1.19.1'
}

application {
    mainClass = 'Main'
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}

tasks.register('createJar', Jar) {
    manifest.from jar.manifest
    archiveFileName = 'fatJar.jar'
    from sourceSets.main.output
}